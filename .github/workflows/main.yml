name: Github Action
on: [push, pull_request]

jobs:
  clean:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Black formatting
        uses: lgeiger/black-action@v1.0.1
        with:
          args: "./"

      - name: Run isort
        uses: jamescurtin/isort-action@master
        with:
          configuration: --profile black

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)

      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.email "r_s@me.com"
          git config --global user.name "romainsacchi"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git checkout $GITHUB_HEAD_REF
          git commit -am "Black reformating"
          git push

  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, ]

    needs: clean

    steps:
      - uses: actions/checkout@v2

      - name: Install python version
        uses: gabrielfalcao/pyenv-action@v9
        with:
          default: ${{ matrix.python }}
          command: pip install -U pip  # upgrade pip after installing python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov

      - name: Run tests
        run: pytest tests

  conda:
    name: (${{ matrix.python-version }}, ubuntu-latest)
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.11" ]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,cmutel,konstantinstadler,haasad,pascallesage,romainsacchi
          allow-softlinks: true
          channel-priority: strict
          auto-update-conda: true
          activate-environment: test

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Publish all variants ðŸ“¦ to Anaconda if Push and if master branch
        if: startsWith(github.ref, 'refs/heads/master')
        shell: bash -l {0}

        run: |
          PKG_NAME=windisch
          USER=romainsacchi
          conda install anaconda-client
          conda install conda-build
          mkdir ~/conda-bld
          conda config --set anaconda_upload no
          export CONDA_BLD_PATH=~/conda-bld
          export VERSION=`date +%Y.%m.%d`

          # Build the package with all variants
          conda build conda/ --old-build-string

          # List built .tar.bz2 and .conda packages
          BUILT_PACKAGES=$(find $CONDA_BLD_PATH -type f \( -name "*.tar.bz2" -o -name "*.conda" \))

          echo "Built packages:"
          echo $BUILT_PACKAGES

          # Upload each valid package
          for PACKAGE in $BUILT_PACKAGES; do
            echo "Uploading $PACKAGE"
            anaconda -t ${{ secrets.ANACONDA_CLOUD }} upload -u $USER $PACKAGE --force
          done
  

  testconda:
    name: (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: conda

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.11", ]
        solver: [ "classic" ]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge,cmutel,konstantinstadler,haasad,pascallesage,romainsacchi
          allow-softlinks: true
          auto-update-conda: true
          activate-environment: test
          conda-solver: ${{ matrix.solver }}

      - name: Pull distribution ðŸ“¦ from Anaconda and test it if master branch

        run: |
          conda install romainsacchi::windisch
          conda update windisch

  Pypi:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v2

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build

      - name: Publish distribution ðŸ“¦ to PyPI if Release
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true

      - name: Publish distribution ðŸ“¦ to Test PyPI if Push
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
